version: "3.7"

services:

  postgres:
    image: postgres
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_PASSWORD: "${DATABASE_PASSWORD}"
      TZ: '${TIME_ZONE}'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

  test-postgres:
    image: postgres
    container_name: test-postgres
    ports:
      - 5433:5432
    environment:
      POSTGRES_PASSWORD: "${TEST_DATABASE_PASSWORD}"
      TZ: '${TIME_ZONE}'
    restart: always

  redis-cache:
    image: redis
    container_name: redis-cache
    volumes:
      - redis_cache_data:/data
    restart: always

  redis-throttle:
    image: redis
    container_name: redis-throttler
    volumes:
      - redis_throttler_data:/data
    restart: always

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack}"
    image: localstack/localstack
    ports:
      - 4566:4566
    environment:
      - SERVICES=s3
    restart: always

  nestjs:
    build:
      context: ./
      dockerfile: nestjs-dockerfile
    container_name: nestjs
    working_dir: /usr/src/nestjs
    tty: true
    environment:
      TZ: '${TIME_ZONE}'
    volumes:
      - ./nestjs:/usr/src/nestjs
      - type: bind
        source: ./.env
        target: /usr/src/nestjs/.env
    command: npm run start:dev
    ports:
      - '3000:3000'
    depends_on:
      - postgres
      - localstack
    restart: always

volumes:
  postgres_data:
    driver: local
  redis_cache_data:
    driver: local
  redis_throttler_data:
    driver: local
